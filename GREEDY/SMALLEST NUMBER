The task is to find the smallest number with given sum of digits as S and number of digits as D.

 

Example 1:

Input:
S = 9 
D = 2
Output:
18
Explanation:
18 is the smallest number
possible with sum = 9
and total digits = 2.
 

Example 2:

Input:
S = 20
D = 3
Output:
299
Explanation:
299 is the smallest number
possible with sum = 20
and total digits = 3.
 

Your Task:

You don't need to read input or print anything. Your task is to complete the function smallestNumber() which takes the two integers S and D and returns a string which is the smallest number if possible, else return "-1".

 

Expected Time Complexity: O(D)
Expected Auxiliary Space: O(1)

 

Constraints:
1 ≤ S ≤ 100
1 ≤ D ≤ 6
*************************************************************************************************************************************

TIME: O(D)
SPACE:O(1)

class Solution{   
public:
    string smallestNumber(int S, int D)
    {
       string ans="";
       if(D==1)
       {
           if(S>=1 && S<=9)
           {
              ans="";
              ans+=to_string(S);
              return ans;
           }
       }
       
       int t=1;
       
       while(D>1)
       {
          
           if((9*D)<S)
           {
              
               return "-1";
           }
           else if(9*(D-1)<S)
           {
               int k=S-9*(D-1);
               if(k>=1 && k<=9)
               {
                 ans=ans+to_string(k);
                 S=S-k;
               }
               else
               {
                   
                   return "-1";
               }
           }
           else if(t==1)
           {
               ans=ans+"1";
               S--;
               t=0;
           }
          2 else 
           {
               ans=ans+"0";
           }
           D--;
       }
       
    
       
       if(S>=0 && S<=9)
       {
           ans=ans+to_string(S);
           return ans;
       }
      
       
          return "-1";
       
       
       
    }
};