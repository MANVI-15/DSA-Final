Given an array nums of integers, we must modify the array in the following way: we choose an i and replace nums[i] with -nums[i], and we repeat this process k times in total.  (We may choose the same index i multiple times.)

Return the largest possible sum of the array after modifying it in this way.

 

Example 1:

Input: nums = [4,2,3], k = 1
Output: 5
Explanation: Choose indices (1,) and nums becomes [4,-2,3].
Example 2:

Input: nums = [3,-1,0,2], k = 3
Output: 6
Explanation: Choose indices (1, 2, 2) and nums becomes [3,1,0,2].
Example 3:

Input: nums = [2,-3,-1,5,-4], k = 2
Output: 13
Explanation: Choose indices (1, 4) and nums becomes [2,3,-1,5,4].
 

Note:

1 <= nums.length <= 10000
1 <= k <= 10000
-100 <= nums[i] <= 100
*********************************************************************************************************************************************
TIME: O(NlogN)
SPACE: O(1)

class Solution{
    public:
    long long int maximizeSum(long long int a[], int n, int k)
    {
        long long int sum=0;
        long long int negative=0;
        for(int i=0;i<n;i++)
        {
            if(a[i]<0)
            {
               negative++;
            }
            
            sum=sum+abs(a[i]);
        }
        
        if(negative==k)
        {
            return sum;
        }
        else if(negative>k)
        { 
           
            long long int c=0;
            sum=0;
            sort(a,a+n);
            
            for(int i=0;i<n;i++)
            {
                if(a[i]<0 && c<k)
                {
                   sum=sum+abs(a[i]);
                   c++; 
                }
                else
                {
                  sum=sum+a[i];
                }
            }
           
            return sum;
          
        }
        else
        {
            long long int temp=k-negative;
            long long int mini=INT_MAX;
            for(int i=0;i<n;i++)
            {
                a[i]=abs(a[i]);
                mini=min(mini,a[i]);
                
            }
          
            if(temp%2==0)
            {
                return sum;
            }
            
            return sum-2*mini;
        }
        
        return 0;
    }
};
