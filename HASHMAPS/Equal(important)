Given an array A of integers, find the index of values that satisfy A + B = C + D, where A,B,C & D are integers values in the array

Note:

1) Return the indices `A1 B1 C1 D1`, so that 
  A[A1] + A[B1] = A[C1] + A[D1]
  A1 < B1, C1 < D1
  A1 < C1, B1 != D1, B1 != C1 

2) If there are more than one solutions, 
   then return the tuple of values which are lexicographical smallest. 

Assume we have two solutions
S1 : A1 B1 C1 D1 ( these are values of indices int the array )  
S2 : A2 B2 C2 D2

S1 is lexicographically smaller than S2 iff
  A1 < A2 OR
  A1 = A2 AND B1 < B2 OR
  A1 = A2 AND B1 = B2 AND C1 < C2 OR 
  A1 = A2 AND B1 = B2 AND C1 = C2 AND D1 < D2
Example:

Input: [3, 4, 7, 1, 2, 9, 8]
Output: [0, 2, 3, 5] (O index)
If no solution is possible, return an empty list.
**************************************************************************************
vector<int> Solution::equal(vector<int> &A) 
{
    int n=(int)A.size();
    vector<int>Ans;
    unordered_map<int,pair<int,int>>m;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
        
            if(m.find(A[i]+A[j])==m.end())
            {
                  m[A[i]+A[j]]={i,j};
                  continue;
            }
            
            auto p=m[A[i]+A[j]];
            if(p.first!=i && p.first!=j && p.second!=i && p.second!=j)
            {
                vector<int>ans;
                ans.push_back(p.first);
                ans.push_back(p.second);
                ans.push_back(i);
                ans.push_back(j);

            
            if(Ans.size()==0)
            {
                Ans=ans;
            }
            else
            {
                /*it is very important to compare Ans and ans becuase first we will get 
                suppoise 0,6 2,3  because 2,3 pair will form first but actual answer can 0,3 5,4 since 5,4
                pair will be found later so we have to keep comparing always*/
                bool f=false;
                for(int i=0;i<(int)Ans.size();i++)
                {
                    if(Ans[i]<ans[i])
                    {
                        break;
                    }
                    else if(Ans[i]>ans[i])
                    {
                        f=true;
                        break;
                    }

                }
                if(f)
                {
                    Ans=ans;
                }
             }
            }
            
        }
    }
   
   return Ans;
    
}
