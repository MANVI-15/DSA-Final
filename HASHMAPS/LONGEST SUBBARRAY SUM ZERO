Find the largest continuous sequence in a array which sums to zero.

Example:


Input:  {1 ,2 ,-2 ,4 ,-4}
Output: {2 ,-2 ,4 ,-4}

 NOTE : If there are multiple correct answers, return the sequence which occurs first in the array. 
 ***************************************************************************************************************************



 vector<int> Solution::lszero(vector<int> &A)
{
    int n=(int)A.size();
    unordered_map<int,int>m;
    int sum=0;
    int ans=0;
    int start=0;
    for(int i=0;i<n;i++)
    {
        sum=sum+A[i];
        
        if(sum==0)
        {
            if(ans<(i+1))
            {
                ans=i+1;
                start=0;
            }
        }
        if(m.find(sum)!=m.end())
        {
            if(ans<((i+1)-m[sum]))
            {
                ans=((i+1)-m[sum]);
                start=m[sum];
            }
        }
        else
        {
            if(m.find(sum)==m.end())
            {
              m[sum]=i+1;
            }
        }
    }
   
    vector<int>v;
    for(int i=start;ans>0;i++)
    {
        v.push_back(A[i]);
        ans--;
    }
    
    return v;
}
