Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109
********************************************************************************************************************************

class Solution {
public:
    int longestConsecutive(vector<int>& nums) 
    {
        
        int n=nums.size();
        int ans=0;
        unordered_map<int,int>m;
        
        
        for(int i=0;i<n;i++)
        {
            m[nums[i]]=1;
        }
        
        for(int i=0;i<n;i++)
        {
            if(m.find(nums[i]-1)!=m.end())
            {
                continue;
            }
            else
            {
                int j=nums[i]+1;
                while(m.find(j)!=m.end())
                {
                    j++;
                }
                
                ans=max(ans,j-nums[i]);
              }
        }
        return ans;
        
    }
};