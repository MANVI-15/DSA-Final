Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target.
Return the sum of the three integers.

Assume that there will only be one solution

Example:
given array S = {-1 2 1 -4},
and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2)






*******************************************************************************************************************************


int Solution::threeSumClosest(vector<int> &A, int B) 
{
    sort(A.begin(),A.end());
    int temp=INT_MAX;
    int ans=INT_MAX;
    int n=(int)A.size();
    for(int i=0;i<n;i++)
    {
        if(i!=0 && A[i]==A[i-1])
        {
            continue;
        }
        
        int l=i+1;
        int r=n-1;
    
        
        while(l<r)
        {
            if((A[l]+A[r]+A[i])==B)
            {
                return B;
            }
            else if((A[l]+A[r]+A[i])>B)
            {
                if(ans>abs(B-(A[l]+A[r]+A[i])))
                {
                    ans=abs(B-(A[l]+A[r]+A[i]));
                    temp=A[l]+A[r]+A[i];
                }
                r--;
            }
            else
            {
                if(ans>(B-(A[l]+A[r]+A[i])))
                {
                    ans=abs(B-(A[l]+A[r]+A[i]));
                    temp=A[l]+A[r]+A[i];
                }
                l++;
            }
        }
    }
    
    return temp;
}
