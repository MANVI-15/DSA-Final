Given two strings A and B, find the minimum number of steps required to convert A to B. (each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

Insert a character
Delete a character
Replace a character


Input Format:

The first argument of input contains a string, A.
The second argument of input contains a string, B.
Output Format:

Return an integer, representing the minimum number of steps required.
Constraints:

1 <= length(A), length(B) <= 450
Examples:

Input 1:
    A = "abad"
    B = "abac"

Output 1:
    1

Explanation 1:
    Operation 1: Replace d with c.

Input 2:
    A = "Anshuman"
    B = "Antihuman"

Output 2:
    2

Explanation 2:
    => Operation 1: Replace s with t.
    => Operation 2: Insert i.

**************************************************************************************************************************************
TIME:O(N*M)
SPACE:O(N*M)

int Solution::minDistance(string A, string B) 
{
    int n=(int)A.length();
    int m=(int)B.length();
    vector<vector<int>>dp(n+1,vector<int>(m+1,0));
          for(int i=n;i>=0;i--)
          {
              for(int j=m;j>=0;j--)
              {
                 if(i==n && j==m)
                 {
                      dp[i][j]=0;
                 }
                 else if(i==n)
                 {
                     dp[i][j]=m-j;
                 }
                 else if(j==m)
                 {
                     dp[i][j]=n-i;
                 }
                 else if(A[i]==B[j])
                 {
                     dp[i][j]=dp[i+1][j+1];
                 }
                 else
                 {
                     dp[i][j]=1+min({dp[i+1][j+1],dp[i+1][j],dp[i][j+1]});
                 }
              }
          }
          
          return dp[0][0];
}