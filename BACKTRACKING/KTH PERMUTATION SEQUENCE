The set [1,2,3,â€¦,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3 ) :

1. "123"
2. "132"
3. "213"
4. "231"
5. "312"
6. "321"
Given n and k, return the kth permutation sequence.

For example, given n = 3, k = 4, ans = "231"

*************************************************************************************************************************
TIME:O(N^2) N=NUMBER 
SPACE:O(N)

string Solution::getPermutation(int A, int k) 
{
    
    int fact=1;
    vector<int>numbers;
     
     for(int i=1;i<A;i++)
     {
         fact=fact*i;
         numbers.push_back(i);
     }
     
     numbers.push_back(A);
     string ans="";
     k=k-1;
     while(true)
     {
         ans=ans+to_string(numbers[k/fact]);
         numbers.erase(numbers.begin()+k/fact);
         if(numbers.size()==0)
         {
             break;
         }
         k=k%fact;
         fact=fact/numbers.size();
     }
     
     return ans;
}
