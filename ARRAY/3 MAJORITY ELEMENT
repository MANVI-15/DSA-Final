Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Follow-up: Could you solve the problem in linear time and in O(1) space?

 

Example 1:

Input: nums = [3,2,3]
Output: [3]
Example 2:

Input: nums = [1]
Output: [1]
Example 3:

Input: nums = [1,2]
Output: [1,2]
 

Constraints:

1 <= nums.length <= 5 * 104
-109 <= nums[i] <= 109

*****************************************************************************************************************

INTUITION:
//WE ASSUME THAT ELEMENT1 AND ELEMENT2 ARE 2 MAJORITY ELEMENT SO THIS MENAS THAT OTHER ELEMENTS CANNOT CANCEL THEN BECUASE THERE FREQUNCY WILL EFINETELY
BE LESS THAN THESE TWO ELEMNTS SO THEY WILL NEVER BE ABLE TO CANCEL THEM\\

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) 
    {
        int n=(int)nums.size();
        
        int ele1;
        int ele2;
        int cnt1=0;
        int cnt2=0;
        
        for(int i=0;i<n;i++)
        {
            if(nums[i]==ele1)
            {
                cnt1++;
            }
            else if(nums[i]==ele2)
            {
                cnt2++;
            }
            else if(cnt1==0)
            {
                ele1=nums[i];
                cnt1=1;
            }
            else if(cnt2==0)
            {
                ele2=nums[i];
                cnt2=1;
            }
            else
            {
                cnt1--;
                cnt2--;
            }
            
        }
        
        cnt1=0;
        cnt2=0;
        /*IT IS IMPORTANT TO CEHCK THIS CONDITION BECAUSE IF THE CASE IS  3 3 3 2 4 THEN ONE ELEMENT WOULD BE 3 AND OTHER WOULD BE  4 BUT 4 IS NOT 
        RIGHT ANSWER SO TO CHECK THAT WE PUT THIS CHECK HERE*/
        for(int i=0;i<n;i++)
        {
            if(nums[i]==ele1)
            {
                cnt1++;
            }
            if(nums[i]==ele2)
            {
                cnt2++;
            }
        }
        
        vector<int>ans;
        
        if(cnt1>(n/3))
        {
            ans.push_back(ele1);
        }
        if(cnt2>(n/3))
        {
            ans.push_back(ele2);
        }
        
        return ans;
        
    }
};