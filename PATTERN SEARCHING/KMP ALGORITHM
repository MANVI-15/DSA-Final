TIME:O(N+M)
SPACE:O(M) pattern length 

#include<bits/stdc++.h>
using namespace std;


void pattern_match(string &s,string &pat,vector<int>&lps,vector<int>&ans,int &cnt)
{
    int n=s.length();
    int m=pat.length();
    int i=0;
    int j=0;

    while(i<n)
    {
        if(s[i]==pat[j])
        {
            i++;
            j++;
        }
        if(j==m)
        {
            ans.push_back((i-j+1));
            cnt++;
            j=lps[j-1];

        }
        else  if(i<n && s[i]!=pat[j])
        {
             if(j==0)
             {
                 i++;
             }
             else
             {
                 j=lps[j-1];
             }
        }
    }
    return ;

}
void kmp(string s,string pat,vector<int>&ans,int &cnt)
{
    int n=(int)s.length();
    int m=(int)pat.length();
    vector<int>lps(m,0);
    int i=0;
    int j=1;

    while(j<m)
    {
        if(pat[i]==pat[j])
        {
            i++;
            lps[j]=i;
            j++;
        }
        else
        {
            if(i!=0)
            {
                i=lps[i-1];
            }
            else
            {
                lps[j]=0;
                j++;
            }
        }
    }
   pattern_match(s,pat,lps,ans,cnt);

}
int main()
{
  int t;
  cin>>t;
  while(t--)
  {
       string s,pat;
       cin>>s>>pat;
       vector<int>ans;
       int cnt=0;
       kmp(s,pat,ans,cnt);
       if(cnt==0)
       {
           cout<<"Not Found";
       }
       else
       {
           cout<<cnt<<endl;
           for(int i=0;i<(int)ans.size();i++)
           {
               cout<<ans[i]<<" ";
           }
       }
       cout<<endl;
  }
}