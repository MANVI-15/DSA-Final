Non Repeating Numbers 
Easy Accuracy: 49.85% Submissions: 15632 Points: 2
Given an array A containing 2*N+2 positive numbers, out of which 2*N numbers exist in pairs whereas the other two number occur exactly once and are distinct. Find the other two numbers.


Example 1:

Input: 
N = 2
arr[] = {1, 2, 3, 2, 1, 4}
Output:
3 4 
Explanation:
3 and 4 occur exactly once.
Example 2:

Input:
N = 1
arr[] = {2, 1, 3, 2}
Output:
1 3
Explanation:
1 3 occur exactly once.

Your Task:
You do not need to read or print anything. Your task is to complete the function singleNumber() which takes the array as input parameter and returns a list of two numbers which occur exactly once in the array. The list must be in ascending order.


Expected Time Complexity: O(N)
Expected Space Complexity: O(1)


Constraints:
1 <= length of array <= 106 
1 <= Elements in array <= 5 * 106
*************************************************************************************************************************************************
TIME COMPLEXITY: O(N)
SPACE: O(1)


class Solution
{
public:
    vector<int> singleNumber(vector<int> nums) 
    {
        int xor1=0;
        int n=(int)nums.size();
        
        for(int i=0;i<n;i++)
        {
            xor1=xor1^nums[i];
        }
        
        int c=0;
        int pos=-1;
        int k=xor1;
        while(k>0)
        {
            if(k&1)
            {
                pos=c;
            }
            k=k>>1;
            c++;
        }
        
        int second=0;
        
        for(int i=0;i<n;i++)
        {
            int k1=nums[i]>>pos;
            
            if(k1&1)
            {
                second=second^nums[i];
            }
          
        }
        
        vector<int>v;
        v.push_back(second);
        v.push_back(second^xor1);
        
        //sort(v.begin(),v.end());
    
    return v;
        
    }
};